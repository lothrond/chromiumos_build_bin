#!/bin/bash

# colors
colr="\e[31m"
colg="\e[32m"
res="\e[0m"

# needs to be in chroot.
lsblk | grep cros >& /dev/null || \
    { echo -e "This operation is done in the ${colr}chroot${res}..."; exit 1 ;}

__head__() { echo "$(basename $0) - flash Chromium OS image on a usb stick" ;}

# Show usage
if [ $# -eq 1 ] && [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    __head__
    echo
    echo "Example:"
    echo "   Enter a usb device: /dev/sdc"
    echo "   Enter a disk image: latest/base"
    echo
    echo "This will run:"
    echo "  cros flash usb:///dev/sdc ~/trunk/build/images/\${BOARD}/latest/chromiumos_base_image.bin"
    echo
    exit 0
fi

# Print informational header.
__head__
echo -e "\n(Run with ${colg}-h${res} or ${colg}--help${res} for more information)"
echo -e "(Press ${colg}ctrl+c${res} to quit anytime)\n"

# Get a valid usb device, or be yelled at.
getdev() { echo -e -n "${colg}Enter usb device:${res} " ;}
getdevfailed() { echo -e "${colr}Not a valid usb device${res}\n" ;}
while getdev; read usbdev; do 
    if [ ! -b $usbdev ]; then
        getdevfailed
    else
        echo; break
    fi
done

# disk images
imagedir=~/trunk/src/build/images/${BOARD}


# ui
getimg() { echo -e -n "${colg}Enter disk image:${res} " ;}
getimgfailed() { 
    echo -e "${colr}Not a valid disk image${res}" 
    echo -e "\nExample:"
    echo -e "  ${colg}latest/base${res} or ${colg}R81-12858.0.2020_01_25_1731-a1/dev${res}"
    echo -e "\n(All builds can found in ${imagedir})\n"
}

# validate build dir
valid_build() {
    if [ -d ${imagedir}/${build} ]; then
        return 0
    fi
    return 1
}

# validate build image
valid_image() {
    case "$image" in
        base) diskimage=${imagedir}/${build}/chromiumos_base_image.bin;;
        dev) diskimage=${imagedir}/${build}/chromiumos_image.bin;;
        test) diskimage=${imagedir}/${build}/chromiumos_test_image.bin;;
    esac

    if [ -f "${diskimage}" ]; then
        return 0
    fi

    echo -e "${colr}No proper disk image of type: ${image}${res}"
    echo -e "${colr}found in: ${imagedir}/${build}${res}\n"
    return 1
}

while getimg; read diskimage; do
    build=$(echo ${diskimage} | cut -d '/' -f 1)
    image=$(echo ${diskimage} | cut -d '/' -f 2)

    if valid_build && valid_image; then
        echo; break
    else
        getimgfailed
    fi
done

# info
echo -e "${colr}Flashing Chromium OS${res}...\n"
echo -e "${colg}*${res} usb: ${colg}${usbdev}"
echo -e "${colg}*${res} disk image: ${colg}${diskimage}${res}"

# flash
cros flash usb://${usbdev} ${diskimage}

