#!/bin/bash

__usage__() {
    echo "$(basename $0) - modifying sources Chromium OS checked in to gerrit"
    echo
    echo "  This script is intended for testing simple changes, on real hardware."
    echo "  It is to patch the branch with a gerrit submission, before re-building the image for testing."
    echo
    echo "USAGE:"
    echo "   $(basename $0) path/to/local_patch"
    echo
    echo "local_patch:"
    echo "   This is a script containing variables needed for a unique patch/build."
    echo "   It can be named anything, and need only contain a few lines of variables."
    echo "   (There is an example local_patch file to copy in: ~/bin/etc/skel)"
    echo
    echo " ** When applying a patch, all changes will always be applied on TOP of sources,
    echo "    after running any new repo sync command."
    echo
    echo " ** To stop this, abandon your local branch with: repo abandon ${LOCAL_BRANCH}"
    echo
}

# all local changes are sourced from a script before building.
if [ $# -eq 1  ] && [ -f $1 ]; then 
    source "$1"
else
    __usage__; exit 1
fi

# The first thing you need to do is to mark the package as active.
cros_workon --board=${BOARD} start ${PACKAGE_NAME}

# sync
sync_sources

# Create branch for your changes.
repo start ${BRANCH_NAME}

# (Make changes)
${PATCH}

# Incrementally compile changes
cros_workon_make --board=${BOARD} ${PACKAGE_NAME}

# Install changes to working sources
cros_workon_make --board=${BOARD} ${PACKAGE_NAME} --install

# (rebuild image)
cd ~/trunk/src/scripts
if [ "$VERITY" == "off" ]; then
    VERITY="--noenable_rootfs_verification"
elif [ "$VERITY" == "on" ]; then
    unset VERITY
else
    echo "USAGE: [VERITY=on] [VERITY=off]"; exit 1
fi
./build_image --board=${BOARD} ${VERITY} ${IMAGE}

# Cleanup
cros_workon --board=${BOARD} stop ${PACKAGE_NAME}
