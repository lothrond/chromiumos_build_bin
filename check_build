#!/bin/bash
#
# Copyright (C) 2020, Mike Moss <msm255243@gmail.com>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.

# colors
colr="\e[31m"
colg="\e[32m"
res="\e[0m"

# Prepare build operations:

# Needs user (not root).
if [ $UID -eq 0 ]; then
    echo -e "${colr}Do not run as root.${res}"; exit 1
fi

# Needs to be in chroot.
lsblk | grep cros >& /dev/null && [ -f "/etc/cros_chroot_version" ] || \
    { echo -e "You Need to be in the ${colr}chroot${res}."; exit 1 ;}

# Check chroot ENVIRONMENT:
failed=0
if ! echo ${BOARD} >& /dev/null; then
    echo -e "Needs ${colr}BOARD${res}"; failed=1
fi
if ! echo ${IMAGE} >& /dev/null; then
    echo -e "Needs ${colr}IMAGE${res}"; failed=1
fi
if ! echo ${VERITY} >& /dev/null; then
    echo -e "Needs ${colr}VERITY${res}"; failed=1
fi
if [ "$failed" == "1" ]; then
    exit 1
fi

unset failed

# Check build image:
case ${IMAGE} in
    test) :;;
    dev) :;;
    base) :;;
    *) echo -e "${colr}USAGE:${res} [IMAGE=base] [IMAGE=dev] [IMAGE=test]"; exit 1;;
esac

# Check verified boot:
if [ "$VERITY" == "off" ]; then
    export __verity__="--noenable_rootfs_verification"
elif [ "$VERITY" == "on" ]; then
    export __verity__=""
else
    echo -e "${colr}USAGE:${res} [VERITY=off] [VERITY=on]"; exit 1
fi

# (You should be in the ~/trunk/src/scripts directory):
if [ "$(pwd)" != "$HOME/trunk/src/scripts" ]; then
    echo -e "You are not in ${colr}~/trunk/src/scripts${res}"
    exit 1
fi

# Print ENVIRONMENT:
echo
echo -e "${colg}*${res} BOARD:  ${BOARD}"
echo -e "${colg}*${res} IMAGE:  ${IMAGE}"
echo -e "${colg}*${res} VERITY: ${VERITY}"
echo
