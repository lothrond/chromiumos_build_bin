#!/bin/bash

# colors
colr="\e[31m"
colg="\e[32m"
res="\e[0m"

# needs to be in chroot.
lsblk | grep cros >& /dev/null || \
    { echo -e "This operation is done in the ${colr}chroot${res}..."; exit 1 ;}

__head__() { echo "$(basename $0) - flash Chromium OS image on a usb stick" ;}

# Show usage
if [ $# -eq 1 ] && [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    __head__
    echo
    echo "Example:"
    echo "   Enter a usb device: /dev/sdc"
    echo "   Enter a disk image: latest/base"
    echo
    echo "This will run:"
    echo "  cros flash usb:///dev/sdc ~/trunk/build/images/\${BOARD}/latest/chromiumos_base_image.bin"
    echo
    exit 0
fi

# Print informational header.
__head__
echo -e "\n(Run with ${colg}-h${res} or ${colg}--help${res} for more information)"
echo -e "(Press ${colg}ctrl+c${res} to quit anytime)\n"

# Get a valid usb device, or be yelled at.
getdev() { echo -e -n "${colg}Enter usb device:${res} " ;}
getdevfailed() { echo -e "${colr}Not a valid usb device${res}" ;}
while getdev; read usbdev; do 
    if [ ! -b $usbdev ]; then
        getdevfailed
    else
        break
    fi
done

# disk images
imagedir=~/trunk/src/build/images/${BOARD}

# Get valid image.
getimg() { echo -e -n "${colg}Enter disk image:${res} " ;}
getimgfailed() { echo -e "${colr}No valid disk image found in: ${diskimage}${res}" ;}
valid_dir() { ls $imagedir | grep $(echo ${diskimage} | cut -d '/' -f 1) || getimgfailed ;}
valid_image() {
    local image=$(echo ${diskimage} | cut -d '/' -f 2)
    case "$image" in
        base) diskimage=chromiumos_base_image.bin;;
        dev) diskimage=chromiumos_image.bin;;
        test) diskimage=chromiumos_test_image.bin;;
        *) getimgfailed; return 1;;
    esac
}

while getimg; read diskimage; do
    if $valid_dir && valid_image; then
        break
    else
        getimgfailed
    fi
done

# Flash image to usb.
#echo -e "\nFlashing to usb device: ${colg}${usbdev}${res}"
#cros flash usb://${usbdev} ${diskimage}


# testing
echo -e "$usbdev $diskimage"
